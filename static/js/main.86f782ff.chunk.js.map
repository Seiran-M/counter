{"version":3,"sources":["Buttons/style.module.css","Scoreboards/style.module.css","Scoreboards/Scoreboards.tsx","Buttons/Buttons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Scoreboards","props","style","scoreboard","count","red","Buttons","buttons","incButton","inc","resetButton","reset","App","useState","setCount","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,yBAAyB,YAAc,6B,iBCAtGD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,IAAM,qB,iKCMlDC,EAAc,SAACC,GACxB,OACI,qBAAK,UAAWC,IAAMC,WAAtB,SACI,qBAAK,UAA2B,IAAhBF,EAAMG,MAAcF,IAAMG,IAAM,GAAhD,SAAqDJ,EAAMG,W,gBCD1DE,EAAU,SAACL,GACpB,OACI,sBAAK,UAAWC,IAAMK,QAAtB,UACI,wBAAQ,UAAWL,IAAMM,UAAW,QAASP,EAAMQ,IAAK,SAA0B,IAAhBR,EAAMG,MAAxE,iBACA,wBAAQ,UAAWF,IAAMQ,YAAa,QAAST,EAAMU,MAAO,SAA0B,IAAhBV,EAAMG,MAA5E,uBCkBGQ,MA1Bf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNT,EADM,KACCU,EADD,KAgBX,OACI,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,CAAaX,MAAOA,IACpB,cAAC,EAAD,CAASK,IAjBX,WACN,GAAIL,EAAQ,EAER,OADAU,EAASV,EAAQ,GAEb,qBAAKW,UAAU,aAAf,SAA6BX,KAaVO,MARjB,WACVG,EAAS,IAOgCV,MAAOA,UCXzCY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86f782ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"style_buttons__1eOBS\",\"incButton\":\"style_incButton__1jRyj\",\"resetButton\":\"style_resetButton__1tKPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreboard\":\"style_scoreboard__3doO8\",\"red\":\"style_red__2z5kw\"};","import React from \"react\";\rimport style from './style.module.css'\r\rtype PropsType = {\r    count: number\r}\r\rexport const Scoreboards = (props: PropsType) => {\r    return (\r        <div className={style.scoreboard}>\r            <div className={props.count === 5 ? style.red : ''}>{props.count}</div>\r        </div>\r    )\r}","import React from \"react\";\rimport style from \"./style.module.css\";\r\rtype ButtonsPropsType = {\r    inc: () => void\r    reset: () => void\r    count: number\r}\r\rexport const Buttons = (props: ButtonsPropsType) => {\r    return (\r        <div className={style.buttons}>\r            <button className={style.incButton} onClick={props.inc} disabled={props.count === 5}>inc</button>\r            <button className={style.resetButton} onClick={props.reset} disabled={props.count === 0}>reset</button>\r        </div>\r    )\r};","import React, {useState} from 'react';\nimport './App.css';\nimport {Scoreboards} from \"./Scoreboards/Scoreboards\";\nimport {Buttons} from \"./Buttons/Buttons\";\n\nfunction App() {\n    let [count, setCount] = useState(0);\n\n    let inc = () => {\n        if (count < 5) {\n            setCount(count + 1)\n            return (\n                <div className=\"scoreboard\">{count}</div>\n            )\n        }\n    }\n\n    const reset = () => {\n        setCount(0)\n    }\n\n    return (\n        <div className=\"App\">\n            <div className='wrapper'>\n                <Scoreboards count={count}/>\n                <Buttons inc={inc} reset={reset} count={count}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}